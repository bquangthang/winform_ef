// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WinFormswithEFSample.models;

#nullable disable

namespace WinFormswithEFSample.Migrations
{
    [DbContext(typeof(ProductsContext))]
    [Migration("20221028083207_mi1")]
    partial class mi1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("WinFormswithEFSample.models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Name = "Cheese"
                        },
                        new
                        {
                            CategoryId = 2,
                            Name = "Meat"
                        },
                        new
                        {
                            CategoryId = 3,
                            Name = "Fish"
                        },
                        new
                        {
                            CategoryId = 4,
                            Name = "Bread"
                        });
                });

            modelBuilder.Entity("WinFormswithEFSample.models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 1,
                            Name = "Cheddar"
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 1,
                            Name = "Brie"
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 1,
                            Name = "Stilton"
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryId = 1,
                            Name = "Cheshire"
                        },
                        new
                        {
                            ProductId = 5,
                            CategoryId = 1,
                            Name = "Swiss"
                        },
                        new
                        {
                            ProductId = 6,
                            CategoryId = 1,
                            Name = "Gruyere"
                        },
                        new
                        {
                            ProductId = 7,
                            CategoryId = 1,
                            Name = "Colby"
                        },
                        new
                        {
                            ProductId = 8,
                            CategoryId = 1,
                            Name = "Mozzela"
                        },
                        new
                        {
                            ProductId = 9,
                            CategoryId = 1,
                            Name = "Ricotta"
                        },
                        new
                        {
                            ProductId = 10,
                            CategoryId = 1,
                            Name = "Parmesan"
                        },
                        new
                        {
                            ProductId = 11,
                            CategoryId = 2,
                            Name = "Ham"
                        },
                        new
                        {
                            ProductId = 12,
                            CategoryId = 2,
                            Name = "Beef"
                        },
                        new
                        {
                            ProductId = 13,
                            CategoryId = 2,
                            Name = "Chicken"
                        },
                        new
                        {
                            ProductId = 14,
                            CategoryId = 2,
                            Name = "Turkey"
                        },
                        new
                        {
                            ProductId = 15,
                            CategoryId = 2,
                            Name = "Prosciutto"
                        },
                        new
                        {
                            ProductId = 16,
                            CategoryId = 2,
                            Name = "Bacon"
                        },
                        new
                        {
                            ProductId = 17,
                            CategoryId = 2,
                            Name = "Mutton"
                        },
                        new
                        {
                            ProductId = 18,
                            CategoryId = 2,
                            Name = "Pastrami"
                        },
                        new
                        {
                            ProductId = 19,
                            CategoryId = 2,
                            Name = "Hazlet"
                        },
                        new
                        {
                            ProductId = 20,
                            CategoryId = 2,
                            Name = "Salami"
                        },
                        new
                        {
                            ProductId = 21,
                            CategoryId = 3,
                            Name = "Salmon"
                        },
                        new
                        {
                            ProductId = 22,
                            CategoryId = 3,
                            Name = "Tuna"
                        },
                        new
                        {
                            ProductId = 23,
                            CategoryId = 3,
                            Name = "Mackerel"
                        },
                        new
                        {
                            ProductId = 24,
                            CategoryId = 4,
                            Name = "Rye"
                        },
                        new
                        {
                            ProductId = 25,
                            CategoryId = 4,
                            Name = "Wheat"
                        },
                        new
                        {
                            ProductId = 26,
                            CategoryId = 4,
                            Name = "Brioche"
                        },
                        new
                        {
                            ProductId = 27,
                            CategoryId = 4,
                            Name = "Naan"
                        },
                        new
                        {
                            ProductId = 28,
                            CategoryId = 4,
                            Name = "Focaccia"
                        },
                        new
                        {
                            ProductId = 29,
                            CategoryId = 4,
                            Name = "Malted"
                        },
                        new
                        {
                            ProductId = 30,
                            CategoryId = 4,
                            Name = "Sourdough"
                        },
                        new
                        {
                            ProductId = 31,
                            CategoryId = 4,
                            Name = "Corn"
                        },
                        new
                        {
                            ProductId = 32,
                            CategoryId = 4,
                            Name = "White"
                        },
                        new
                        {
                            ProductId = 33,
                            CategoryId = 4,
                            Name = "Soda"
                        });
                });

            modelBuilder.Entity("WinFormswithEFSample.models.Product", b =>
                {
                    b.HasOne("WinFormswithEFSample.models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("WinFormswithEFSample.models.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
